<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.housebook.dao.MoneyBookMapper">
	
	<select id="selectList" parameterType="string" resultType="hashmap">
		select
			m.moneybook_no as moneybook_no
			,m.acc_id as acc_id
			,m.moneybook_memo as moneybook_memo
			,m.moneybook_type as moneybook_type
			,m.moneybook_amount as moneybook_amount
			,to_char(m.moneybook_indate, 'yyyy-MM-dd') as moneybook_indate
			,a.acc_nm as acc_nm
		from
			moneybook_tb m , account_tb a
		where
			m.acc_id = a.acc_id
				and
			a.acc_id like #{loginId}
			<if test="searchValue != ''">
				<choose>
					<when test="searchType == 'income'">
						and m.moneybook_type like '収入'
					</when>
					<when test="searchType == 'outcome'">
						and m.moneybook_type like '支出'
					</when>
					<otherwise>
						
					</otherwise>
				</choose>
				and m.moneybook_memo like '%'||#{searchValue}||'%'
			</if>
		order by
			m.moneybook_indate desc
	</select>
	
	<insert id="insertMoneyBook" parameterType="moneybook">
		insert into
			moneybook_tb
		values(
			moneybook_tb_seq.nextval
			,#{acc_id}
			,#{moneybook_memo}
			,#{moneybook_type}
			,#{moneybook_amount}
			,sysdate
		)
	</insert>
	
	<select id="selectOne" parameterType="string" resultType="moneybook">
		select
			moneybook_no
			,acc_id
			,moneybook_memo
			,moneybook_type
			,moneybook_amount
			,to_char(moneybook_indate, 'yyyy-MM-dd') as moneybook_indate
		from
			moneybook_tb
		where
			moneybook_no like #{moneybook_no}
	</select>
	
	<update id="updateMoneyBook" parameterType="moneybook">
		update
			moneybook_tb
		set
			moneybook_memo = #{moneybook_memo}
			,moneybook_type = #{moneybook_type}
			,moneybook_amount = #{moneybook_amount}
		where
			moneybook_no = #{moneybook_no}
	</update>
	
	<delete id="deleteMoneyBook" parameterType="string">
		delete from
			moneybook_tb
		where
			moneybook_no = #{moneybook_no}
	</delete>
	
	<select id="totalResult" parameterType="hashmap" resultType="string">
		select
			sum(moneybook_amount) as moneybook_amount
		from
			moneybook_tb
		where
			acc_id like #{loginId}
				and
			moneybook_type like #{searchType}
	</select>
	
	<select id="minMax" parameterType="hashmap" resultType="string">
		select
			<if test="searchType == 'min'">
				min(moneybook_amount) as moneybook_amount
			</if>
			<if test="searchType == 'max'">
				max(moneybook_amount) as moneybook_amount
			</if>
		from
			moneybook_tb
		where
			acc_id like #{loginId}
	</select>
	
</mapper>
